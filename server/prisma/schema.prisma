// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        String     @id @default(uuid())
  nome      String
  username  String     @unique
  password  String
  empresaId String
  propostas Proposta[]
  Ordem     Ordem[]
  createdAt DateTime   @default(now())

  @@index([username, password])
  @@map("usuarios")
}

model Empresa {
  id        String   @id @default(uuid())
  nome      String
  createdAt DateTime @default(now())

  @@map("empresas")
}

model Unidade {
  id            String     @id @default(uuid())
  codUnidade    String     @unique
  cnpj          String
  razaoSocial   String
  nomeFantasia  String
  representante String
  rg            String
  cpf           String
  rua           String
  numero        String
  complemento   String
  pais          String
  estado        String
  cidade        String
  cep           String
  bairro        String
  telefone      String
  celular       String
  email         String
  createdAt     DateTime   @default(now())
  propostas     Proposta[]
  Ordem         Ordem[]

  @@index([id, codUnidade])
  @@map("unidades")
}

model Cliente {
  id            String     @id @default(uuid())
  codCliente    String     @unique
  cnpj          String
  razaoSocial   String
  nomeFantasia  String
  representante String
  rg            String
  cpf           String
  rua           String
  numero        String
  complemento   String
  pais          String
  estado        String
  cidade        String
  cep           String
  bairro        String
  telefone      String
  celular       String
  email         String
  funcionarios  Int        @default(0)
  createdAt     DateTime   @default(now())
  propostas     Proposta[]
  Ordem         Ordem[]

  @@index([id, codCliente])
  @@map("clientes")
}

model Servico {
  id                String            @id @default(uuid())
  codServico        String
  nome              String
  descricao         String
  descricaoProposta String
  valor             Float
  createdAt         DateTime          @default(now())
  propostaServicos  PropostaServico[]
  ordemServicos     OrdemServico[]

  @@map("servicos")
}

model Proposta {
  id                String            @id @default(uuid())
  codProposta       String
  idUnidade         String
  idCliente         String
  idUsuario         String
  idContrato        String
  funcionarios      Float
  status            Int               @default(1)
  deslocamento      Boolean           @default(false)
  valorDeslocamento Float             @default(0)
  total             Int
  createdAt         DateTime          @default(now())
  cliente           Cliente           @relation(fields: [idCliente], references: [id])
  unidade           Unidade           @relation(fields: [idUnidade], references: [id])
  usuario           Usuario           @relation(fields: [idUsuario], references: [id])
  contrato          Contrato          @relation(fields: [idContrato], references: [id])
  propostaServicos  PropostaServico[]

  @@map("propostas")
}

model PropostaServico {
  id         String   @id @default(uuid())
  idProposta String
  idServico  String
  valor      Float
  createdAt  DateTime @default(now())
  propostas  Proposta @relation(fields: [idProposta], references: [id])
  servicos   Servico  @relation(fields: [idServico], references: [id])

  @@map("proposta_servicos")
}

model Contrato {
  id          String     @id @default(uuid())
  codContrato String
  status      Int        @default(1)
  idOrdem     String?
  dataFinal   DateTime   @default(now())
  createdAt   DateTime   @default(now())
  propostas   Proposta[]
  ordem       Ordem?     @relation(fields: [idOrdem], references: [id])

  @@map("contratos")
}

model Ordem {
  id                String         @id @default(uuid())
  codOrdem          String
  status            Int            @default(1)
  idUnidade         String
  idCliente         String
  idUsuario         String
  funcionarios      Float
  deslocamento      Boolean        @default(false)
  valorDeslocamento Float          @default(0)
  total             Int
  createdAt         DateTime       @default(now())
  dataInicial       DateTime?
  dataFinal         DateTime?       
  cliente           Cliente        @relation(fields: [idCliente], references: [id])
  unidade           Unidade        @relation(fields: [idUnidade], references: [id])
  usuario           Usuario        @relation(fields: [idUsuario], references: [id])
  contratos         Contrato[]
  ordemServicos     OrdemServico[]

  @@map("ordens")
}

model OrdemServico {
  id        String   @id @default(uuid())
  idServico String
  idOrdem   String
  valor     Float
  createdAt DateTime @default(now())
  servicos  Servico  @relation(fields: [idServico], references: [id])
  Ordem     Ordem    @relation(fields: [idOrdem], references: [id])

  @@map("ordem_servicos")
}
