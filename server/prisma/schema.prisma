// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id String @id @default(uuid())
  nome String
  username String @unique
  password String
  empresaId String
  propostas Proposta[]
  createdAt DateTime @default(now())
  @@map("usuarios")
  @@index([username, password])
}

model Empresa {
  id String @id @default(uuid())
  nome String
  createdAt DateTime @default(now())
  @@map("empresas")
}

model Unidade {
  id String @id @default(uuid())
  codUnidade String @unique
  cnpj String
  razaoSocial String
  nomeFantasia String
  representante String
  rg String
  cpf String
  rua String
  numero String
  complemento String
  pais String
  estado String
  cidade String
  cep String
  bairro String
  telefone String
  celular String
  email String
  createdAt DateTime @default(now())
  propostas Proposta[]
  @@map("unidades")
  @@index([id, codUnidade])
}

model Cliente {
  id String @id @default(uuid())
  codCliente String @unique
  cnpj String
  razaoSocial String
  nomeFantasia String
  representante String
  rg String
  cpf String
  rua String
  numero String
  complemento String
  pais String
  estado String
  cidade String
  cep String
  bairro String
  telefone String
  celular String
  email String
  funcionarios Int @default(0)
  createdAt DateTime @default(now())
  propostas Proposta[]
  @@map("clientes")
  @@index([id, codCliente])
}

model Servico {
  id String @id @default(uuid())
  codServico String
  nome String
  descricao String
  descricaoProposta String
  valor Float
  createdAt DateTime @default(now())
  propostaServicos PropostaServico[]
  @@map("servicos")
}

model Proposta {
  id String @id @default(uuid())
  codProposta String
  idUnidade String
  idCliente String
  idUsuario String
  funcionarios Float
  status Int @default(1)
  deslocamento Boolean @default(false)
  valorDeslocamento Float @default(0)
  total Int
  dataEncerramento DateTime @default(now())
  createdAt DateTime @default(now())
  usuario Usuario @relation(fields: [idUsuario], references: [id])
  cliente Cliente @relation(fields: [idCliente], references: [id])
  unidade Unidade @relation(fields: [idUnidade], references: [id])  
  propostaServicos PropostaServico[]
  @@map("propostas")
}

model PropostaServico {
  id String @id @default(uuid())
  idProposta String
  idServico String
  valor Float
  createdAt DateTime @default(now())
  proposta Proposta @relation(fields: [idProposta], references: [id])
  servico Servico @relation(fields: [idServico],references: [id])
  @@map("proposta_servicos")
}
